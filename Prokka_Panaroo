
#######################
## Genome Annotation ##
#######################
 
# make a directory for this analysis
mkdir Prokka_Panaroo/

# make a directory inside Prokka_Panaroo 
cd Prokka_panaroo
mkdir CPPV
 
# move your fasta file to the folder
cp CPPV.length.filtered.QC.fasta Prokka_Panaroo/CPPV
 
# go to the folder
cd Prokka_Panaroo/CPPV
 
# make a directory for the annotation
mkdir ANNOTATION/
 
# go to the folder
cd ANNOTATION/

# Run Prokka
module load prokka/prokka.1.14.6

# split FASTA file into one for each sample – make sure there are no ; and & symbols in the file names
/mnt/lustre/RDS-live/downing/bin/faSplit byname ../CPPV.length.filtered.QC.fasta  .
 

# run Prokka for the files using Rscript annotation.R
module load R
R
 
run_prokka <- function(file) { # create a function to run prokka
  c <- basename(tools::file_path_sans_ext(file))
  # Append "_PROKKA" to the modified file name
  b <- paste0(c, "_PROKKA")
  cat(file, "\n")   # Print the original file name
 
  # Run prokka command
print(paste('prokka ',' --kingdom Viruses --proteins KX894508.gb --gffver 3 --usegenus --outdir ',b,' --force --genus Capripoxvirus --prefix ',c,' ',file, ' --compliant ', sep=""))
  system2(command="prokka", args=c(' --kingdom Viruses --proteins KX894508.gb --gffver 3 --usegenus --outdir ',b,' --force --genus Capripoxvirus --prefix ',c,' ',file, ' --compliant '), wait = T, stdout = paste0(b, ".out"), stderr = paste0(b, ".err"))
}
          # KX894508.gb is the LSDV reference genome


# Set the working directory to the parent directory of "bin"
fa_files <- list.files(pattern = "\\.fa$", full.names = TRUE)
 
# Iterate over each .fa file and run Prokka
for (file in fa_files) {  run_prokka(file) }
 
q()
y
 

# count number of GFF files produced
ls -lt *gff | grep -c ""


############################
## Pangenome Construction ##
############################

# check panaroo works
/mnt/lustre/RDS-live/downing/miniconda3/envs/snippy/bin/panaroo
 
# run panaroo and send results to directory called PANAROO
/mnt/lustre/RDS-live/downing/miniconda3/envs/snippy/bin/panaroo -i */*.gff -o PANAROO --clean-mode strict 

 
# Examine the CSV file, summary stats file, etc, using R, use the above folder “PANAROO”
R
<add your own code here for this>
 
# Maybe impor the CSV files and stats files into R and try to make sense of them. That could be visually (like the heatmap) or numerically (eg a table). The main goal is to check if Panaroo worked correctly, and try to deduce what it has found. Then you can apply your code to the other datasets, so take your time in doing it, and create .R file on the server to organise this.

# Look at GML produced # from https://rpubs.com/pspace/quickR
R
install.packages("igraph")
library("igraph")
g = read.graph(file="final_graph.gml", format="gml")
summary(g)
vcount(g)
ecount(g)
plot(g, layout=layout.fruchterman.reingold(g), vertex.label=NA, vertex.size=5)
V(g)$label
q()
y
 
# make heatmap
R
x2 <- as.data.frame(read.csv("gene_presence_absence.Rtab", sep="\t"))
str(x2) # samples as columns, genes as rows
rownames(x2) <- x2[,1] # reassign row (ie, gene) names
x2 <- x2[,-1] # remove gene names from table (not needed)
my_palette <- colorRampPalette(c("lightgray", "green", "black"))(n = 299)
library(gplots)
# x2[x2 == 0] <- NA
pdf("heatmap.pdf", width=30, height=40)
col_breaks = c(seq(0.001,0.2,length=100), seq(0.3,0.4,length=100), seq(0.5,0.6,length=100))
heatmap.2(as.matrix(x2), dendrogram = "none", col=my_palette, margins = c(59,8),
trace = "none", density.info = "none", breaks =  col_breaks, na.color = "white")
dev.off()
q()
Y
